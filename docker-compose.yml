version: '2'

services:
  ## Smarthome containers ##
  # MQTT Broker for MQTT devices and the rfplugs service
  mqtt:
    restart: on-failure
    image: "robotany/mosquitto-rpi"
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes: 
      - "./config/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf"  
      - "./config/mosquitto/mosquitto_passwords:/mosqitto/config/mosquitto_passwords"  
      - "./log/mosquitto.log:/mosquitto/log/mosquitto.log"

  # home assistant instance
  home-assistant:
    restart: on-failure
    image: "homeassistant/raspberrypi3-homeassistant"
    # needed for homekit?!
    network_mode: "host"
    ports:
      - "8123:8123"
      - "51827:51827"
    volumes:
      # configs
      - "./config/ha/automations.yaml:/config/automations.yaml"
      - "./config/ha/configuration.yaml:/config/configuration.yaml"
      - "./config/ha/groups.yaml:/config/groups.yaml"
      - "./config/ha/scripts.yaml:/config/scripts.yaml"
      - "./config/ha/ui-lovelace.yaml:/config/ui-lovelace.yaml"
      - "./config/ha/ha_secrets.yaml:/config/secrets.yaml"
      # data files
      - "./data/ha:/config/"
      # - "./ha/data/.storage:/config/.storage"
      # - "./ha/data/.homekit.state:/config/.homekit.state"
      # misc
      - "./log/home-assistant.log:/config/home-assistant.log"
      - "/etc/localtime:/etc/localtime:ro"

  # deconz for all zigbee devices
  deconz:
    image: marthoc/deconz
    #container_name: deconz
    network_mode: host
    restart: on-failure
    ports:
      - "9080:9080"
      - "9443:9443"
    volumes:
      - ./data/deconz:/root/.local/share/dresden-elektronik/deCONZ
    devices:
      - /dev/ttyUSB0
    environment:
      - DECONZ_WEB_PORT=9080
      - DECONZ_WS_PORT=9443
      - DEBUG_INFO=1
      - DEBUG_APS=0
      - DEBUG_ZCL=0
      - DEBUG_ZDP=0
      - DEBUG_OTAU=0
  
  # rfplugs manages cheap rf devices
  rfplugs:
    restart: on-failure
    build: ./rfplugs/
    devices:
      - /dev/gpiomem
    volumes:
      - "./config/rflamps.toml/:/rflamps.toml"
    environment:
      - CONF_FILE=/rflamps.toml


  ## Network, control and utilities
  # unifi for wifi management
  unifi:
    restart: on-failure
    image: ryansch/unifi-rpi:latest
    # needed for AP discovery and AP updates
    network_mode: "host"
    ports:
      - "8080:8080"
      - "8443:8443"
      - "3478:3478"
      - "10001:10001/udp"
      - "8880:8880"
      - "8843:8843"      
    volumes:
      # TODO: consider having these in mapped dirs
      # Unifi v5.0.7 creates all of these directories (some remain empty)
      - ./config/unifi:/var/lib/unifi
      - log:/usr/lib/unifi/logs
      - log2:/var/log/unifi
      - run:/usr/lib/unifi/run
      - run2:/run/unifi
      - ./data/unifi/work:/usr/lib/unifi/work

  # portainer for docker management
  portainer:
    image: portainer/portainer:latest
      # using portainer image for raspberry pi by deviantony
      # sources: [github.com](https://github.com/portainer/portainer.git)
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./data/portainer:/data"
    ports:
      - "9000:9000"
    restart: on-failure

  # cloudflare ddns
  cloudflare-ddns:
    image: oznu/cloudflare-ddns:armhf # change 'latest' to 'armhf' or 'aarch64' if running on an arm device
    restart: on-failure
    env_file:
      - "config/cloudflare_creds.env"
  
  # guest passwords
  unifi-psk-updater:
    restart: on-failure
    build: ./unifi-psk-updater
    volumes:
      - "./config/unifi-psk-updater.toml/:/unifi-psk-updater.toml"
    ports:
      - "9002:9002"
    environment:
      - CONFIG_PATH=/unifi-psk-updater.toml

## unifi volumes
volumes:
  # config:
  #   driver: local
  log:
    driver: local
  log2:
    driver: local
  run:
    driver: local
  run2:
    driver: local
  # work:
  #   driver: local